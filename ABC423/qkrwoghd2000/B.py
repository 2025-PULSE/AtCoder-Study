# N+1개의 방이 있고, 방 사이에는 N개의 문이 있다.
# 잠금상태를 나타내는 L_i 0이면 열려있고, 1이면 닫혀있다.
# 한 사람은 방 0에 한사람은 방 N에 있을 때, 각 사람은 문이 열려있을 떄만 이동가능
# 두 사람 모두 도달 할 수 없는 방에 개수를 출력하라
# 범위는 2~100, 시간은 2초 굉장히 널널해서 부르드포스로도 풀릴 것
# 처음에 1을 만나는 시점을 첫단과 끝단에서 이동하면서 구한 뒤에 N에서 뺴면 정답, 투 포인터 탐색
# 구현하자.
# n-sc-ec-1하니 wa가 나왔다. 그러면 엣지케이스를 보자
# 2
# 1 1
# 맞고
# 2
# 0 0
# 이게 틀렸네
# 또 WA다.
# 따로 분리해서 두 번 읽는 형식으로 하자.
# 깔끔해졌다.
# 3번 제출해서 ac다.(wa,wa,ac)
n=int(input())
l=list(map(int,input().split()))
sc=0
ec=0

while sc < n and l[sc]==0:
    sc+=1
while ec < n and l[n-ec-1]==0:
    ec+=1

print(max(0,n-sc-ec-1))